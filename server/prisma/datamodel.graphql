type User {
  id: ID! @unique
  email: String! @unique
  password: String
  firstname: String!
  lastname: String!
  birthdate: DateTime!
  sex: Sexs!
  roles: [Role!]! @relation(name: "R1")
}

enum Sexs {
  MALE
  FEMALE
}

type Role {
  id: ID! @unique
  name: String! @unique
  description: String
  users: [User!]! @relation(name: "R2")
}

type File {
  id: ID! @unique
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
  size: Int!
}

"""
Schemas of SEMEAT project
"""

type Test {
  id: ID! @unique
  type: Types!
  description: String
  enable: Boolean! @default(value: false)
  sections: [Section!]! @relation(name: "R3")  
}

type Section {
  id: ID! @unique
  name: String! @unique
  description: String
  enable: Boolean! @default(value: true)
  exercises: [Exercise!]! @relation(name: "R4")
  tests: [Test!]! @relation(name: "R5")  
}

type Exercise {
  id: ID! @unique
  code: Codes! @unique
  point: Int! @default(value: 0)
  description: String
  sections: [Section!]! @relation(name: "R6")  
}

type TestData {
  id: ID! @unique
  type: Types!
  createdBy: User!
  initAt: DateTime!
  finalAt: DateTime!
  exerciseDatas: [ExerciseData!]! @relation(name: "R7")  
}

type ExerciseData {
  id: ID! @unique
  initAt: DateTime!
  finalAt: DateTime!
  result: [Result!]! @relation(name: "R8") 
  level: Int @default(value: 0)
  hit: Int @default(value: 0)
  fault: Int @default(value: 0)
  omit: Int @default(value: 0)
  error: Int @default(value: 0)
  point: Int @default(value: 0)
}

type Result {
  id: ID! @unique
  question: String!
  response: String!
}

enum Types {
  INITIAL
}

enum Codes {
  A0
  A1
  A2
  A3
  A4
  A5
  A6
  A7
  A8
  A9  
  B0
  B1
  B2
  B3
  B4
  B5
  B6
  B7
  B8
  B9
}
